/*描述

某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。

由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。

输入

输入文件第一行有两个整数L（1 <= L <= 10000）和 M（1 <= M <= 100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。

输出

输出包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。

样例输入

500 3
150 300
100 200
470 471

样例输出

298

提示

【数据规模】

 对于20%的数据，区域之间没有重合的部分；

对于其它的数据，区域之间有重合的情况。

题目来源

NOIP2005
*/

#include<iostream>
#include<algorithm>
using namespace std;

int main()
{
	int L,M,start,end,s=0;
	bool a[10000]={0};
	cin>>L>>M;
	for(int i=0;i<=L;i++) a[i]=1;
	for(int i=0;i<M;i++){
		cin>>start>>end;
		for(int j=start;j<=end;j++){
			a[j]=0;
		}
	} 
	for(int i=0;i<=L;i++){
		if(a[i]==1) s++;
	}
	cout<<s;
	return 0;
}


